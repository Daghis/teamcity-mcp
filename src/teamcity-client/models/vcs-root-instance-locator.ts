/* tslint:disable */
/* eslint-disable */
/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1 (current)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Represents a locator string for filtering VcsRootInstance entities.
 * @export
 * @interface VcsRootInstanceLocator
 */
export interface VcsRootInstanceLocator {
  /**
   * Project (direct or indirect parent) locator.
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  affectedProject?: string;
  /**
   * Build locator.
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  build?: string;
  /**
   * Build type locator.
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  buildType?: string;
  /**
   * For paginated calls, how many entities to return per page.
   * @type {number}
   * @memberof VcsRootInstanceLocator
   */
  count?: number;
  /**
   * Entity ID.
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  id?: string;
  /**
   * Supply multiple locators and return a union of the results.
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  item?: string;
  /**
   * Limit processing to the latest `<lookupLimit>` entities.
   * @type {number}
   * @memberof VcsRootInstanceLocator
   */
  lookupLimit?: number;
  /**
   * Project (direct parent) locator.
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  project?: string;
  /**
   *
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  property?: VcsRootInstanceLocatorPropertyEnum;
  /**
   * For paginated calls, from which entity to start rendering the page.
   * @type {number}
   * @memberof VcsRootInstanceLocator
   */
  start?: number;
  /**
   * Type of VCS (e.g. jetbrains.git).
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  type?: string;
  /**
   * VCS root locator.
   * @type {string}
   * @memberof VcsRootInstanceLocator
   */
  vcsRoot?: string;
  /**
   * Is used for versioned settings.
   * @type {boolean}
   * @memberof VcsRootInstanceLocator
   */
  versionedSettings?: boolean;
}

export const VcsRootInstanceLocatorPropertyEnum = {
  Exists: 'exists',
  NotExists: 'not-exists',
  Equals: 'equals',
  DoesNotEqual: 'does-not-equal',
  StartsWith: 'starts-with',
  Contains: 'contains',
  DoesNotContain: 'does-not-contain',
  EndsWith: 'ends-with',
  Any: 'any',
  Matches: 'matches',
  DoesNotMatch: 'does-not-match',
  MoreThan: 'more-than',
  NoMoreThan: 'no-more-than',
  LessThan: 'less-than',
  NoLessThan: 'no-less-than',
  VerMoreThan: 'ver-more-than',
  VerNoMoreThan: 'ver-no-more-than',
  VerLessThan: 'ver-less-than',
  VerNoLessThan: 'ver-no-less-than',
} as const;

export type VcsRootInstanceLocatorPropertyEnum =
  (typeof VcsRootInstanceLocatorPropertyEnum)[keyof typeof VcsRootInstanceLocatorPropertyEnum];
