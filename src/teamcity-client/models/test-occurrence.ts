/* tslint:disable */
/* eslint-disable */
/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1 (current)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
// May contain unused imports in some cases
// @ts-ignore
import type { Build } from './build';
// May contain unused imports in some cases
// @ts-ignore
import type { Mute } from './mute';
// May contain unused imports in some cases
// @ts-ignore
import type { Test } from './test';
// May contain unused imports in some cases
// @ts-ignore
import type { TestOccurrences } from './test-occurrences';
// May contain unused imports in some cases
// @ts-ignore
import type { TestRunMetadata } from './test-run-metadata';

/**
 * Represents a relation between a test and the specific build.
 * @export
 * @interface TestOccurrence
 */
export interface TestOccurrence {
  /**
   *
   * @type {string}
   * @memberof TestOccurrence
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof TestOccurrence
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof TestOccurrence
   */
  status?: TestOccurrenceStatusEnum;
  /**
   *
   * @type {boolean}
   * @memberof TestOccurrence
   */
  ignored?: boolean;
  /**
   *
   * @type {number}
   * @memberof TestOccurrence
   */
  duration?: number;
  /**
   *
   * @type {string}
   * @memberof TestOccurrence
   */
  runOrder?: string;
  /**
   *
   * @type {boolean}
   * @memberof TestOccurrence
   */
  newFailure?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TestOccurrence
   */
  muted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TestOccurrence
   */
  currentlyMuted?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TestOccurrence
   */
  currentlyInvestigated?: boolean;
  /**
   *
   * @type {string}
   * @memberof TestOccurrence
   */
  href?: string;
  /**
   *
   * @type {string}
   * @memberof TestOccurrence
   */
  ignoreDetails?: string;
  /**
   *
   * @type {string}
   * @memberof TestOccurrence
   */
  details?: string;
  /**
   *
   * @type {Test}
   * @memberof TestOccurrence
   */
  test?: Test;
  /**
   *
   * @type {Mute}
   * @memberof TestOccurrence
   */
  mute?: Mute;
  /**
   *
   * @type {Build}
   * @memberof TestOccurrence
   */
  build?: Build;
  /**
   *
   * @type {TestOccurrence}
   * @memberof TestOccurrence
   */
  firstFailed?: TestOccurrence;
  /**
   *
   * @type {TestOccurrence}
   * @memberof TestOccurrence
   */
  nextFixed?: TestOccurrence;
  /**
   *
   * @type {TestOccurrences}
   * @memberof TestOccurrence
   */
  invocations?: TestOccurrences;
  /**
   *
   * @type {TestRunMetadata}
   * @memberof TestOccurrence
   */
  metadata?: TestRunMetadata;
  /**
   *
   * @type {string}
   * @memberof TestOccurrence
   */
  logAnchor?: string;
}

export const TestOccurrenceStatusEnum = {
  Unknown: 'UNKNOWN',
  Normal: 'NORMAL',
  Warning: 'WARNING',
  Failure: 'FAILURE',
  Error: 'ERROR',
} as const;

export type TestOccurrenceStatusEnum =
  (typeof TestOccurrenceStatusEnum)[keyof typeof TestOccurrenceStatusEnum];
