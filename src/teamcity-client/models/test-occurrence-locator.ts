/* tslint:disable */
/* eslint-disable */
/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1 (current)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Represents a locator string for filtering TestOccurrence entities.
 * @export
 * @interface TestOccurrenceLocator
 */
export interface TestOccurrenceLocator {
  /**
   * Project (direct or indirect parent) locator.
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  affectedProject?: string;
  /**
   *
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  branch?: string;
  /**
   * Build locator.
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  build?: string;
  /**
   * Build type locator.
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  buildType?: string;
  /**
   * For paginated calls, how many entities to return per page.
   * @type {number}
   * @memberof TestOccurrenceLocator
   */
  count?: number;
  /**
   * Is currently failing.
   * @type {boolean}
   * @memberof TestOccurrenceLocator
   */
  currentlyFailing?: boolean;
  /**
   * Is currently investigated.
   * @type {boolean}
   * @memberof TestOccurrenceLocator
   */
  currentlyInvestigated?: boolean;
  /**
   *
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  currentlyMuted?: string;
  /**
   * Entity ID.
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  id?: string;
  /**
   * Is ignored.
   * @type {boolean}
   * @memberof TestOccurrenceLocator
   */
  ignored?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof TestOccurrenceLocator
   */
  includePersonal?: boolean;
  /**
   * Supply multiple locators and return a union of the results.
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  item?: string;
  /**
   * Limit processing to the latest `<lookupLimit>` entities.
   * @type {number}
   * @memberof TestOccurrenceLocator
   */
  lookupLimit?: number;
  /**
   * Is muted.
   * @type {boolean}
   * @memberof TestOccurrenceLocator
   */
  muted?: boolean;
  /**
   *
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  newFailure?: string;
  /**
   * For paginated calls, from which entity to start rendering the page.
   * @type {number}
   * @memberof TestOccurrenceLocator
   */
  start?: number;
  /**
   *
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  status?: TestOccurrenceLocatorStatusEnum;
  /**
   * Test locator.
   * @type {string}
   * @memberof TestOccurrenceLocator
   */
  test?: string;
}

export const TestOccurrenceLocatorStatusEnum = {
  Unknown: 'unknown',
  Normal: 'normal',
  Warning: 'warning',
  Failure: 'failure',
  Error: 'error',
  Success: 'success',
} as const;

export type TestOccurrenceLocatorStatusEnum =
  (typeof TestOccurrenceLocatorStatusEnum)[keyof typeof TestOccurrenceLocatorStatusEnum];
