/* tslint:disable */
/* eslint-disable */
/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1 (current)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
// May contain unused imports in some cases
// @ts-ignore
import type { Environment } from './environment';
// May contain unused imports in some cases
// @ts-ignore
import type { Properties } from './properties';

/**
 * The agent type that describes common properties shared by all agents of this type. Stand-alone local agents are the only representatives of their corresponding types, whereas cloud agents spawned from the same cloud image belong to the same type.
 * @export
 * @interface AgentType
 */
export interface AgentType {
  /**
   *
   * @type {Properties}
   * @memberof AgentType
   */
  buildParameters?: Properties;
  /**
   *
   * @type {Properties}
   * @memberof AgentType
   */
  configurationParameters?: Properties;
  /**
   *
   * @type {Properties}
   * @memberof AgentType
   */
  availableParameters?: Properties;
  /**
   *
   * @type {Environment}
   * @memberof AgentType
   */
  environment?: Environment;
  /**
   *
   * @type {Properties}
   * @memberof AgentType
   */
  systemParameters?: Properties;
  /**
   *
   * @type {Properties}
   * @memberof AgentType
   */
  environmentParameters?: Properties;
  /**
   * Returns *true* if this type identifies agents spawned from a cloud image; *false* if this type identifies a local stand-alone agent.
   * @type {boolean}
   * @memberof AgentType
   */
  isCloud?: boolean;
  /**
   * The name of a local agent or a cloud image that belongs to this type.
   * @type {string}
   * @memberof AgentType
   */
  name?: string;
  /**
   * An integer value that is the unique agent identificator.
   * @type {number}
   * @memberof AgentType
   */
  id?: number;
}
