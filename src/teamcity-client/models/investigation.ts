/* tslint:disable */
/* eslint-disable */
/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1 (current)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
// May contain unused imports in some cases
// @ts-ignore
import type { Comment } from './comment';
// May contain unused imports in some cases
// @ts-ignore
import type { ProblemScope } from './problem-scope';
// May contain unused imports in some cases
// @ts-ignore
import type { ProblemTarget } from './problem-target';
// May contain unused imports in some cases
// @ts-ignore
import type { Resolution } from './resolution';
// May contain unused imports in some cases
// @ts-ignore
import type { User } from './user';

/**
 * An investigation of a specific build problem (`/app/rest/investigations?locator=type:problem`), a failed test (`/app/rest/investigations?locator=type:test`), or an entire build configuration (`/app/rest/investigations?locator=type:anyProblem`)
 * @export
 * @interface Investigation
 */
export interface Investigation {
  /**
   * The investigation locator.
   * @type {string}
   * @memberof Investigation
   */
  id?: string;
  /**
   * The investigation state. Supported values:   * *TAKEN* — the investigation is assigned to a TeamCity user who works on resolving the problem. * *FIXED* — the investigation was marked as fixed. * *GIVEN_UP* — the investigation is no longer active, the \'no investigation\' option was selected. * *NONE* — unknown investigation status.
   * @type {string}
   * @memberof Investigation
   */
  state?: InvestigationStateEnum;
  /**
   * The short (without the TeamCity server address) link to this investigation.
   * @type {string}
   * @memberof Investigation
   */
  href?: string;
  /**
   *
   * @type {User}
   * @memberof Investigation
   */
  assignee?: User;
  /**
   *
   * @type {Comment}
   * @memberof Investigation
   */
  assignment?: Comment;
  /**
   *
   * @type {ProblemScope}
   * @memberof Investigation
   */
  scope?: ProblemScope;
  /**
   *
   * @type {ProblemTarget}
   * @memberof Investigation
   */
  target?: ProblemTarget;
  /**
   *
   * @type {Resolution}
   * @memberof Investigation
   */
  resolution?: Resolution;
  /**
   *
   * @type {User}
   * @memberof Investigation
   */
  responsible?: User;
}

export const InvestigationStateEnum = {
  Taken: 'TAKEN',
  Fixed: 'FIXED',
  GivenUp: 'GIVEN_UP',
  None: 'NONE',
} as const;

export type InvestigationStateEnum =
  (typeof InvestigationStateEnum)[keyof typeof InvestigationStateEnum];
