/* tslint:disable */
/* eslint-disable */
/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1 (current)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
// May contain unused imports in some cases
// @ts-ignore
import type { BuildType } from './build-type';
// May contain unused imports in some cases
// @ts-ignore
import type { BuildTypes } from './build-types';
// May contain unused imports in some cases
// @ts-ignore
import type { CloudProfiles } from './cloud-profiles';
// May contain unused imports in some cases
// @ts-ignore
import type { DeploymentDashboards } from './deployment-dashboards';
// May contain unused imports in some cases
// @ts-ignore
import type { Links } from './links';
// May contain unused imports in some cases
// @ts-ignore
import type { ProjectFeatures } from './project-features';
// May contain unused imports in some cases
// @ts-ignore
import type { Projects } from './projects';
// May contain unused imports in some cases
// @ts-ignore
import type { Properties } from './properties';
// May contain unused imports in some cases
// @ts-ignore
import type { StateField } from './state-field';
// May contain unused imports in some cases
// @ts-ignore
import type { VcsRoots } from './vcs-roots';

/**
 * A TeamCity project that owns other projects and/or individual build configurations (build types).
 * @export
 * @interface Project
 */
export interface Project {
  /**
   * The public project ID. If not specified, TeamCity generates one by removing all non-alphanumeric characters from the project name.
   * @type {string}
   * @memberof Project
   */
  id?: string;
  /**
   * The internally used read-only project ID.
   * @type {string}
   * @memberof Project
   */
  internalId?: string;
  /**
   * The universally unique identifier of this project.
   * @type {string}
   * @memberof Project
   */
  uuid?: string;
  /**
   * The public project name.
   * @type {string}
   * @memberof Project
   */
  name?: string;
  /**
   * The ID of a TeamCity project that owns this project. Returns \'_Root\' if this is project resides on the topmost level.
   * @type {string}
   * @memberof Project
   */
  parentProjectId?: string;
  /**
   * The internal ID of a TeamCity project that owns this project. This property is deprecated, use `parent` and `parentProjectId` to identify parent projects and retrieve their properties.
   * @type {string}
   * @memberof Project
   */
  parentProjectInternalId?: string;
  /**
   * The public name of a TeamCity project that owns this project. This property is deprecated, use `parent` and `parentProjectId` to identify parent projects and retrieve their properties.
   * @type {string}
   * @memberof Project
   */
  parentProjectName?: string;
  /**
   * Returns **true** if the project is archived; otherwise, **false**.
   * @type {boolean}
   * @memberof Project
   */
  archived?: boolean;
  /**
   * Returns **true** if this project is dynamically created by TeamCity; **false** if this a regular project created by a user.
   * @type {boolean}
   * @memberof Project
   */
  virtual?: boolean;
  /**
   * The optional project description, or **null** if none was set.
   * @type {string}
   * @memberof Project
   */
  description?: string;
  /**
   * The shortest REST API link to this project (without the TeamCity server URL).
   * @type {string}
   * @memberof Project
   */
  href?: string;
  /**
   * The regular URL of the project.
   * @type {string}
   * @memberof Project
   */
  webUrl?: string;
  /**
   *
   * @type {Links}
   * @memberof Project
   */
  links?: Links;
  /**
   *
   * @type {Project}
   * @memberof Project
   */
  parentProject?: Project;
  /**
   *
   * @type {StateField}
   * @memberof Project
   */
  readOnlyUI?: StateField;
  /**
   *
   * @type {BuildType}
   * @memberof Project
   */
  defaultTemplate?: BuildType;
  /**
   *
   * @type {BuildTypes}
   * @memberof Project
   */
  buildTypes?: BuildTypes;
  /**
   *
   * @type {BuildTypes}
   * @memberof Project
   */
  templates?: BuildTypes;
  /**
   *
   * @type {DeploymentDashboards}
   * @memberof Project
   */
  deploymentDashboards?: DeploymentDashboards;
  /**
   *
   * @type {Properties}
   * @memberof Project
   */
  parameters?: Properties;
  /**
   *
   * @type {VcsRoots}
   * @memberof Project
   */
  vcsRoots?: VcsRoots;
  /**
   *
   * @type {ProjectFeatures}
   * @memberof Project
   */
  projectFeatures?: ProjectFeatures;
  /**
   *
   * @type {Projects}
   * @memberof Project
   */
  projects?: Projects;
  /**
   *
   * @type {CloudProfiles}
   * @memberof Project
   */
  cloudProfiles?: CloudProfiles;
  /**
   *
   * @type {Projects}
   * @memberof Project
   */
  ancestorProjects?: Projects;
  /**
   *
   * @type {string}
   * @memberof Project
   */
  locator?: string;
}
