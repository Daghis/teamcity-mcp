/* tslint:disable */
/* eslint-disable */
/**
 * TeamCity REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2018.1 (current)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Represents a locator string for filtering Investigation entities.
 * @export
 * @interface InvestigationLocator
 */
export interface InvestigationLocator {
  /**
   * Project (direct or indirect parent) locator.
   * @type {string}
   * @memberof InvestigationLocator
   */
  affectedProject?: string;
  /**
   * User locator.
   * @type {string}
   * @memberof InvestigationLocator
   */
  assignee?: string;
  /**
   * Project (direct parent) locator.
   * @type {string}
   * @memberof InvestigationLocator
   */
  assignmentProject?: string;
  /**
   * Build type locator.
   * @type {string}
   * @memberof InvestigationLocator
   */
  buildType?: string;
  /**
   * For paginated calls, how many entities to return per page.
   * @type {number}
   * @memberof InvestigationLocator
   */
  count?: number;
  /**
   * Problem locator.
   * @type {string}
   * @memberof InvestigationLocator
   */
  problem?: string;
  /**
   * User locator.
   * @type {string}
   * @memberof InvestigationLocator
   */
  reporter?: string;
  /**
   *
   * @type {string}
   * @memberof InvestigationLocator
   */
  resolution?: InvestigationLocatorResolutionEnum;
  /**
   * yyyyMMddTHHmmss+ZZZZ
   * @type {string}
   * @memberof InvestigationLocator
   */
  sinceDate?: string;
  /**
   * For paginated calls, from which entity to start rendering the page.
   * @type {number}
   * @memberof InvestigationLocator
   */
  start?: number;
  /**
   *
   * @type {string}
   * @memberof InvestigationLocator
   */
  state?: InvestigationLocatorStateEnum;
  /**
   * Test locator.
   * @type {string}
   * @memberof InvestigationLocator
   */
  test?: string;
  /**
   *
   * @type {string}
   * @memberof InvestigationLocator
   */
  type?: InvestigationLocatorTypeEnum;
}

export const InvestigationLocatorResolutionEnum = {
  Manually: 'manually',
  WhenFixed: 'when_fixed',
} as const;

export type InvestigationLocatorResolutionEnum =
  (typeof InvestigationLocatorResolutionEnum)[keyof typeof InvestigationLocatorResolutionEnum];
export const InvestigationLocatorStateEnum = {
  Taken: 'taken',
  Fixed: 'fixed',
  GivenUp: 'given_up',
  None: 'none',
} as const;

export type InvestigationLocatorStateEnum =
  (typeof InvestigationLocatorStateEnum)[keyof typeof InvestigationLocatorStateEnum];
export const InvestigationLocatorTypeEnum = {
  AnyProblem: 'anyProblem',
  Test: 'test',
  Problem: 'problem',
  Unknown: 'unknown',
} as const;

export type InvestigationLocatorTypeEnum =
  (typeof InvestigationLocatorTypeEnum)[keyof typeof InvestigationLocatorTypeEnum];
